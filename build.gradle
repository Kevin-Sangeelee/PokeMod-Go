buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

tasks.withType(JavaCompile) {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
}

repositories {

}

apply plugin: 'net.minecraftforge.gradle.forge'

project.ext {
	massive = "1"
    major = "0"
    minor = "3"
    mcVersion = "1.10.2"
}


version = "${project.ext.massive}.${project.ext.major}.${project.minor}"
group = "pokemodgo"
archivesBaseName = "PokeModGo"


if (System.getenv().BUILD_NUMBER != null) {
    version += "-${System.getenv().BUILD_NUMBER}"
}

def grabDep(url) {
    ant.get(src: url, dest: 'dep')
	compile files("dep/" + url.substring(url.lastIndexOf("/")));
}

dependencies {
    def f = new File('dep/')
    if (f.exists()) {
        f.delete()
    }
    f.mkdirs()
    if (!f.exists()) {
        f.mkdir()
    }

}

minecraft {
    version = "1.10.2-12.18.1.2026"
    runDir = "eclipse"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20160518"

    // replacing stuff in the source
	replace '@MASSIVE@', project.massive
    replace '@MAJOR@', project.major
    replace '@MINOR@', project.minor
    replace '@MC_VERSION@', version
    if (System.getenv("BUILD_NUMBER") != null) {
        replace '@BUILD_NUMBER@', System.getenv("BUILD_NUMBER")
    } else {
        replace '@BUILD_NUMBER@', 0
    }

}

// configure the source folders
sourceSets {
    main {
        java {
            srcDir 'src'
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
        resources {
            srcDir 'resources'
            exclude '**/.md' // exclude readme from localization repo
			exclude 'Models'
			exclude 'unused resources'
			exclude '**/.txt'
			exclude '**/.docx'
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
    }
	
	api {
    java {

    }
}
}

processResources
{
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task("uploadJars", dependsOn:"reobf") {
    description = "uploads JARs"
    if (System.getenv("local_maven") != null) {
        apply plugin: 'maven'
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: "file://" + System.getenv("local_maven"))
                }
            }
        }
    }
}

jar {
    appendix = "${project.ext.mcVersion}"
    classifier = "universal"
}

task userdevJar(type: Jar) {
    from(sourceSets.main.output)
	from(sourceSets.main.allSource)
    appendix = "${project.ext.mcVersion}"
    classifier = "userdev"
}

artifacts {
    archives userdevJar
}